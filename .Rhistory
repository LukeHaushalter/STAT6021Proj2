data<-read.xlsx('DataDownload2015.xlsx', sheet = 3)
# Set up logistic regression
# Subset data to include a response and potential predictors
cols <- c("LILATracts_1And10", "TractLOWI",
"TractKids", "TractSeniors",
"TractWhite", "TractBlack",
"TractAsian", "TractNHOPI",
"TractAIAN", "TractOMultir",
"TractHispanic", "TractHUNV",
"Urban","TractSNAP",
"POP2010", "OHU2010",
"PovertyRate", "MedianFamilyIncome")
# Split the data into training and test sets
set.seed(111)
sample <- sample.int(nrow(data), floor(0.5*nrow(data)), replace = F)
logreg_train <- data[sample,cols]
logreg_test <- data[-sample, cols]
# Use glm to make a logistic regression model
logreg<-glm(LILATracts_1And10~., data=logreg_train, family="binomial")
summary(logreg)
# Delta G for full model
1 - pchisq(logreg$null.deviance-logreg$deviance,12)
# The predictors TractWhite and OHU2010 did not have
# significance according to Wald test. Running a Likelihood
# Ratio test to see if that subset can be removed
# Subset data
reduced_cols <- c("LILATracts_1And10", "TractLOWI",
"TractKids", "TractSeniors",
"TractBlack","TractAsian",
"TractNHOPI","TractAIAN",
"TractOMultir","TractHispanic",
"TractHUNV","Urban",
"TractSNAP", "POP2010",
"PovertyRate","MedianFamilyIncome")
reduced_data <- logreg_train[,reduced_cols]
# Subset model
reduced <-glm(LILATracts_1And10~., data=reduced_data, family="binomial")
# Likelihood Ratio test
# H0: ^B,TractWhite = ^B, OHU2010 = 0
# H1: At least one of the predictors TractWhite, OHU2010 is not 0
1-pchisq(reduced$deviance-logreg$deviance,2)
# p-value = 0.980
# Fail to reject the null, we can drop OHU and TractWhite
# Renaming reduced to logreg
logreg <- reduced
summary(logreg)
# In the summary for the reduced model, POP2010 is
# now found to be insignificant from its Wald test
# statistic. Removing the POP2010 predictor from the model
reduced_data <- reduced_data[,-14]
logreg <-glm(LILATracts_1And10~., data=reduced_data, family="binomial")
summary(logreg)
# All predictors now have significant Wald Test statistics.
# Checking Delta G for newest iteration of model
1 - pchisq(logreg$null.deviance-logreg$deviance,12)
#DG = 0
# Create an ROC curve for our Logistic Regression
library(ROCR)
# Predictions for Low Income, Low Access on the test set
# based on fitted model
preds <- predict(logreg,newdata=logreg_test, type="response")
# Classification Rates
rates <- prediction(preds, logreg_test$LILATracts_1And10)
# ROC plot
roc_result <- performance(rates, measure="tpr", x.measure="fpr")
plot(roc_result, main="ROC for Low Income, Low Access Classifier")
lines(x=c(0,1), y=c(0,1),col="red")
View(data)
# What % of tracts are urban?
data$Urban = 1
View(data)
data<-read.xlsx('DataDownload2015.xlsx', sheet = 3)
View(data)
library(openxlsx)
data<-read.xlsx('DataDownload2015.xlsx', sheet = 3)
# What % of tracts are urban?
data$Urban == 1
# What % of tracts are urban?
num.urban <- sum(data$Urban == 1)
num.urban/nrow(data)
# US Population accounted for in data
us.pop <- sum(data$POP2010)
?aggregate
# Population by state
aggregate(data$POP2010,by=list(Category=data$State), FUN=sum )
# Population by state
aggregate(data$POP2010,by=list(State=data$State), FUN=sum )
install.packages('tidyverse')
library(ggplot2)
race.pops <- c("TractWhite", "TractBlack", "TractAsian",
"TractNHOPI", "TractAIAN", "TractOMultir")
race.pop.data<-data[race.pops]
View(race.pop.data)
?aes
?geom_bar
geom_bar(stat="identity")
ggplot(race.pop.data, aes(y=race.pops))
geom_bar(stat="identity")
ggplot(race.pop.data, aes(y=race.pops)) +
geom_bar(stat="identity")
race.pops <- c("CensusTract", "TractWhite", "TractBlack", "TractAsian",
"TractNHOPI", "TractAIAN", "TractOMultir")
race.pop.data<-data[race.pops]
geom_bar(stat = "identity")
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
data <- data.frame(
name=data$CensusTract,
value=data[race.pops]
)
# Read in Data to variable data
library(openxlsx)
data<-read.xlsx('DataDownload2015.xlsx', sheet = 3)
# What % of tracts are urban?
num.urban <- sum(data$Urban == 1)
num.urban/nrow(data)
# 75.72%
# US Population accounted for in data
us.pop <- sum(data$POP2010)
# Approx. 308 mil
# Population by state
aggregate(data$POP2010,by=list(State=data$State), FUN=sum )
# Can we infer anything about food access by looking a a tract's
# racial demographic makeup?
# subset data to population by race variables
race.pops <- c("TractWhite", "TractBlack", "TractAsian",
"TractNHOPI", "TractAIAN", "TractOMultir")
race.pop.data <- data.frame(
name=data$CensusTract,
value=data[race.pops]
)
View(race.pop.data)
library(ggplot2)
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
race.pop.data <- data.frame(
name=data$CensusTract,
value=data["TractWhite"]
)
library(ggplot2)
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
# Read in Data to variable data
library(openxlsx)
data<-read.xlsx('DataDownload2015.xlsx', sheet = 3)
# What % of tracts are urban?
num.urban <- sum(data$Urban == 1)
num.urban/nrow(data)
# 75.72%
# US Population accounted for in data
us.pop <- sum(data$POP2010)
# Approx. 308 mil
# Population by state
aggregate(data$POP2010,by=list(State=data$State), FUN=sum )
# Can we infer anything about food access by looking a a tract's
# racial demographic makeup?
# subset data to population by race variables
race.pops <- c("TractWhite", "TractBlack", "TractAsian",
"TractNHOPI", "TractAIAN", "TractOMultir")
race.pop.data <- data.frame(
name=data$CensusTract,
value=data["TractWhite"]
)
library(ggplot2)
ggplot(data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
?aes
ggplot(race.pop.data, aes(x=name, y=value)) +
geom_bar(stat = "identity")
race.pop.data <- data[race.pops]
View(race.pop.data)
ggplot(race.pop.data, aes(x=data$CensusTract, y=race.pop.data)) +
geom_bar(stat = "identity")
ggplot(race.pop.data, aes(x=CensusTract, y=TractWhite) +
geom_bar(stat = "identity")
)
ggplot(race.pop.data, aes(x=CensusTract, y=TractWhite)) +
geom_bar(stat = "identity")
ggplot(data, aes(x=CensusTract, y=TractWhite)) +
geom_bar(stat = "identity")
ggplot(data, aes(x=CensusTract, y=TractWhite))
?rep
for (race in race.pops){
name<-"pct"+race
data$name <- race/data$POP2010
}
View(data)
?cbind
# Add columns for relative freq of races
data$pctWhite <- data$TractWhite/data$POP2010
View(data)
data$pctWhite
data$pctAsian <- data$TractAsian/data$POP2010
data$pctBlack <- data$TractBlack/data$POP2010
data$pctNHOPI <- data$TractNHOPI/data$POP2010
data$pctAIAN <- data$TractAIAN/data$POP2010
data$pctOMultir <- data$TractOMultir/data$POP2010
ggplot(data, aes(x=CensusTract)) +
geom_bar(aes(y=pctWhite))
ggplot(data, aes(x=pctWhite)) +
geom_bar()
ggplot(data, aes(x=CensusTract)) +
geom_bar()
?rbind
# Create a dataframe to plot
df <- rbind(
data.frame(data$CensusTract, "pct"=data$pctWhite, "Race"="White"),
data.frame(data$CensusTract, "pct"=data$pctBlack, "Race"="Black"),
data.frame(data$CensusTract, "pct"=data$pctAsian, "Race"="Asian")
)
ggplot(df, aes(x=CensusTract, y=pct)) +
geom_bar(aes(fill=Race))
View(df)
ggplot(df, aes(x=data.CensusTract, y=pct)) +
geom_bar(aes(fill=Race))
ggplot(df, aes(x=data.CensusTract, y=pct)) +
geom_bar(aes(fill=Race), stat=identity)
ggplot(df, aes(x=data.CensusTract, y=pct)) +
geom_bar(aes(fill=Race), stat="identity")
View(df)
df <- rbind(
data.frame(data$State, "pct"=data$pctWhite, "Race"="White"),
data.frame(data$State, "pct"=data$pctBlack, "Race"="Black"),
data.frame(data$State, "pct"=data$pctAsian, "Race"="Asian")
)
library(ggplot2)
ggplot(df, aes(x=data.State, y=pct)) +
geom_bar(aes(fill=Race), stat="identity")
df <- rbind(
data.frame(data$CensusTract, "pct"=data$pctWhite, "Race"="White"),
data.frame(data$CensusTract, "pct"=data$pctBlack, "Race"="Black"),
data.frame(data$CensusTract, "pct"=data$pctAsian, "Race"="Asian")
)
library(ggplot2)
ggplot(df, aes(x=data.CensusTract, y=pct)) +
geom_bar(aes(fill=Race), stat="identity")
View(df)
ggplot(df[order(df$pct)], aes(x=data.CensusTract, y=pct)) +
geom_bar(aes(fill=Race), stat="identity")
df <- df[orcer(-df$Race, df$pct)]
df <- df[order(-df$Race, df$pct)]
df <- df[order(df$pct)]
df <- df[order(df$pct),]
View(df)
df <- df[order(data$pctWhite),]
View(data)
View(df)
ggplot(df, aes(x=data.CensusTract, y=pct)) +
geom_bar(aes(fill=Race), stat="identity")
df <- rbind(
data.frame(data$CensusTract, "pct"=data$pctWhite, "Race"="White"),
data.frame(data$CensusTract, "pct"=data$pctBlack, "Race"="Black"),
data.frame(data$CensusTract, "pct"=data$pctAsian, "Race"="Asian"),
)
df <- df[order(data$pctWhite),]
# Create a dataframe to plot
df <- rbind(
data.frame(data$CensusTract, "pct"=data$pctWhite, "Race"="White"),
data.frame(data$CensusTract, "pct"=data$pctBlack, "Race"="Black"),
data.frame(data$CensusTract, "pct"=data$pctAsian, "Race"="Asian"),
data.frame(data$CensusTract, "pct"=data$pctNHOPI, "Race"="Native Hawaiian/Pacific Islander"),
data.frame(data$CensusTract, "pct"=data$pctAIAN, "Race"="American Indian/Native Alaskan"),
data.frame(data$CensusTract, "pct"=data$pctOMultir, "Race"="Multi-Racial/Other")
)
View(df)
df[df$Race=="White"]
View(df)
df[df$Race=="white"]
df[df$Race=="white",]
df[,df$Race=="white"]
ggplot(df, aes(x=data.CensusTract, y=pct)) +
geom_bar(aes(fill=Race), stat="identity")
ggplot(df, aes(x=data.CensusTract, y=pct)) +
geom_bar(aes(fill=Race), stat="identity")
ggplot(df, aes(x=data.CensusTract, y=pct)) +
geom_bar(aes(fill=Race), stat="identity")
# Population by state
state.pops <- aggregate(data$POP2010,by=list(State=data$State), FUN=sum )
View(state.pops)
# Racial populations by state
aggregate(data$TractWhite, list(State=data$State), FUN=sum)
states.white.pop <- aggregate(data$TractWhite, list(State=data$State), FUN=sum)
states.black.pop <- aggregate(data$TractBlack, list(State=data$State), FUN=sum)
states.asian.pop <- aggregate(data$TractAsian, list(State=data$State), FUN=sum)
states.nhopi.pop <- aggregate(data$TractNHOPI, list(State=data$State), FUN=sum)
states.aian.pop <- aggregate(data$TractWhite, list(State=data$State), FUN=sum)
states.omultir.pop <- aggregate(data$TractWhite, list(State=data$State), FUN=sum)
View(states.omultir.pop)
View(states.nhopi.pop)
# Create a dataframe to plot
df <- rbind(
data.frame(states.nhopi.pop$State, "pct"=states.nhopi.pop$x, "Race"="Native Hawaiian/Pacific Islander"),
data.frame(states.aian.pop$State, "pct"=states.aian.pop$x, "Race"="American Indian/Native Alaskan"),
data.frame(states.omultir.pop$State, "pct"=states.omultir.pop$x, "Race"="Multi-Racial/Other"),
data.frame(states.asian.pop$State, "pct"=states.asian.pop$x, "Race"="Asian"),
data.frame(states.black.pop$State, "pct"=states.black.pop$x, "Race"="Black"),
data.frame(states.white.pop$State, "pct"=states.white.pop$x, "Race"="White")
)
View(df)
# Read in Data to variable data
library(openxlsx)
data<-read.xlsx('DataDownload2015.xlsx', sheet = 3)
num.urban <- sum(data$Urban == 1)
num.urban/nrow(data)
# US Population accounted for in data
us.pop <- sum(data$POP2010)
# Population by state
state.pops <- aggregate(data$POP2010,by=list(State=data$State), FUN=sum )
# Racial populations by state
states.white.pop <- aggregate(data$TractWhite, list(State=data$State), FUN=sum)
states.black.pop <- aggregate(data$TractBlack, list(State=data$State), FUN=sum)
states.asian.pop <- aggregate(data$TractAsian, list(State=data$State), FUN=sum)
states.nhopi.pop <- aggregate(data$TractNHOPI, list(State=data$State), FUN=sum)
states.aian.pop <- aggregate(data$TractWhite, list(State=data$State), FUN=sum)
states.omultir.pop <- aggregate(data$TractWhite, list(State=data$State), FUN=sum)
data$pctWhite <- data$TractWhite/data$POP2010
data$pctBlack <- data$TractBlack/data$POP2010
data$pctAsian <- data$TractAsian/data$POP2010
data$pctNHOPI <- data$TractNHOPI/data$POP2010
data$pctAIAN <- data$TractAIAN/data$POP2010
data$pctOMultir <- data$TractOMultir/data$POP2010
df <- rbind(
data.frame(states.nhopi.pop$State, "pct"=states.nhopi.pop$x, "Race"="Native Hawaiian/Pacific Islander"),
data.frame(states.aian.pop$State, "pct"=states.aian.pop$x, "Race"="American Indian/Native Alaskan"),
data.frame(states.omultir.pop$State, "pct"=states.omultir.pop$x, "Race"="Multi-Racial/Other"),
data.frame(states.asian.pop$State, "pct"=states.asian.pop$x, "Race"="Asian"),
data.frame(states.black.pop$State, "pct"=states.black.pop$x, "Race"="Black"),
data.frame(states.white.pop$State, "pct"=states.white.pop$x, "Race"="White")
)
data.frame(states.nhopi.pop$State, "pct"=states.nhopi.pop$x, "Race"="Native Hawaiian/Pacific Islander")
rbind)
rbind(
data.frame(states.nhopi.pop$State, "pct"=states.nhopi.pop$x, "Race"="Native Hawaiian/Pacific Islander"),
data.frame(states.aian.pop$State, "pct"=states.aian.pop$x, "Race"="American Indian/Native Alaskan"))
View(states.nhopi.pop)
data.frame(states.nhopi.pop$State, "pct"=states.nhopi.pop$x, "Race"="Native Hawaiian/Pacific Islander")
df <- rbind(
data.frame("State" = states.nhopi.pop$State, "pct"=states.nhopi.pop$x, "Race"="Native Hawaiian/Pacific Islander"),
data.frame("State" = states.aian.pop$State, "pct"=states.aian.pop$x, "Race"="American Indian/Native Alaskan"),
data.frame("State" = states.omultir.pop$State, "pct"=states.omultir.pop$x, "Race"="Multi-Racial/Other"),
data.frame("State" = states.asian.pop$State, "pct"=states.asian.pop$x, "Race"="Asian"),
data.frame("State" = states.black.pop$State, "pct"=states.black.pop$x, "Race"="Black"),
data.frame("State" = states.white.pop$State, "pct"=states.white.pop$x, "Race"="White")
)
View(df)
# Relative frequencies of racial populations by state
states.white.pop$x <- states.white.pop$x/state.pops$x
View(states.white.pop)
states.black.pop$x <- states.black.pop$x/state.pops$x
View(states.black.pop)
states.asian.pop$x <- states.asian.pop$x/state.pops$x
View(states.aian.pop)
View(states.asian.pop)
states.nhopi.pop$x <- states.nhopi.pop$x/state.pops$x
states.omultir.pop$x<-states.omultir.pop$x/state.pops$x
states.white.pop$x <- states.white.pop$x/state.pops$x
states.black.pop$x <- states.black.pop$x/state.pops$x
states.asian.pop$x <- states.asian.pop$x/state.pops$x
states.nhopi.pop$x <- states.nhopi.pop$x/state.pops$x
states.aian.pop$x <- states.aian.pop$x/state.pops$x
states.omultir.pop$x<-states.omultir.pop$x/state.pops$x
df <- rbind(
data.frame("State" = states.nhopi.pop$State, "pct"=states.nhopi.pop$x, "Race"="Native Hawaiian/Pacific Islander"),
data.frame("State" = states.aian.pop$State, "pct"=states.aian.pop$x, "Race"="American Indian/Native Alaskan"),
data.frame("State" = states.omultir.pop$State, "pct"=states.omultir.pop$x, "Race"="Multi-Racial/Other"),
data.frame("State" = states.asian.pop$State, "pct"=states.asian.pop$x, "Race"="Asian"),
data.frame("State" = states.black.pop$State, "pct"=states.black.pop$x, "Race"="Black"),
data.frame("State" = states.white.pop$State, "pct"=states.white.pop$x, "Race"="White")
)
ggplot(df, aes(x=data.CensusTract, y=pct)) +
geom_bar(aes(fill=Race), stat="identity")
View(df)
ggplot(df, aes(x=State, y=pct)) +
geom_bar(aes(fill=Race), stat="identity")
View(df)
View(states.nhopi.pop)
View(states.white.pop)
states.white.pop <- aggregate(data$TractWhite, list(State=data$State), FUN=sum)
states.black.pop <- aggregate(data$TractBlack, list(State=data$State), FUN=sum)
states.asian.pop <- aggregate(data$TractAsian, list(State=data$State), FUN=sum)
states.nhopi.pop <- aggregate(data$TractNHOPI, list(State=data$State), FUN=sum)
states.aian.pop <- aggregate(data$TractWhite, list(State=data$State), FUN=sum)
states.omultir.pop <- aggregate(data$TractWhite, list(State=data$State), FUN=sum)
View(states.white.pop)
states.white.pop$x <- states.white.pop$x/state.pops$x
states.black.pop$x <- states.black.pop$x/state.pops$x
states.asian.pop$x <- states.asian.pop$x/state.pops$x
states.nhopi.pop$x <- states.nhopi.pop$x/state.pops$x
states.aian.pop$x <- states.aian.pop$x/state.pops$x
states.omultir.pop$x<-states.omultir.pop$x/state.pops$x
# Create a dataframe to plot
df <- rbind(
data.frame("State" = states.nhopi.pop$State, "pct"=states.nhopi.pop$x, "Race"="Native Hawaiian/Pacific Islander"),
data.frame("State" = states.aian.pop$State, "pct"=states.aian.pop$x, "Race"="American Indian/Native Alaskan"),
data.frame("State" = states.omultir.pop$State, "pct"=states.omultir.pop$x, "Race"="Multi-Racial/Other"),
data.frame("State" = states.asian.pop$State, "pct"=states.asian.pop$x, "Race"="Asian"),
data.frame("State" = states.black.pop$State, "pct"=states.black.pop$x, "Race"="Black"),
data.frame("State" = states.white.pop$State, "pct"=states.white.pop$x, "Race"="White")
)
ggplot(df, aes(x=State, y=pct)) +
geom_bar(aes(fill=Race), stat="identity")
View(state.pops)
View(states.black.pop)
View(states.omultir.pop)
View(states.omultir.pop)
View(states.white.pop)
states.omultir.pop <- aggregate(data$TractOMultir, list(State=data$State), FUN=sum)
states.omultir.pop$x<-states.omultir.pop$x/state.pops$x
# Create a dataframe to plot
df <- rbind(
data.frame("State" = states.nhopi.pop$State, "pct"=states.nhopi.pop$x, "Race"="Native Hawaiian/Pacific Islander"),
data.frame("State" = states.aian.pop$State, "pct"=states.aian.pop$x, "Race"="American Indian/Native Alaskan"),
data.frame("State" = states.omultir.pop$State, "pct"=states.omultir.pop$x, "Race"="Multi-Racial/Other"),
data.frame("State" = states.asian.pop$State, "pct"=states.asian.pop$x, "Race"="Asian"),
data.frame("State" = states.black.pop$State, "pct"=states.black.pop$x, "Race"="Black"),
data.frame("State" = states.white.pop$State, "pct"=states.white.pop$x, "Race"="White")
)
ggplot(df, aes(x=State, y=pct)) +
geom_bar(aes(fill=Race), stat="identity")
View(states.omultir.pop)
states.aian.pop <- aggregate(data$TractAIAN, list(State=data$State), FUN=sum)
states.aian.pop$x <- states.aian.pop$x/state.pops$x
# Create a dataframe to plot
df <- rbind(
data.frame("State" = states.nhopi.pop$State, "pct"=states.nhopi.pop$x, "Race"="Native Hawaiian/Pacific Islander"),
data.frame("State" = states.aian.pop$State, "pct"=states.aian.pop$x, "Race"="American Indian/Native Alaskan"),
data.frame("State" = states.omultir.pop$State, "pct"=states.omultir.pop$x, "Race"="Multi-Racial/Other"),
data.frame("State" = states.asian.pop$State, "pct"=states.asian.pop$x, "Race"="Asian"),
data.frame("State" = states.black.pop$State, "pct"=states.black.pop$x, "Race"="Black"),
data.frame("State" = states.white.pop$State, "pct"=states.white.pop$x, "Race"="White")
)
ggplot(df, aes(x=State, y=pct)) +
geom_bar(aes(fill=Race), stat="identity")
# Subset data to include a response and potential predictors
cols <- c("LILATracts_1And10", "TractLOWI",
"TractKids", "TractSeniors",
"TractWhite", "TractBlack",
"TractAsian", "TractNHOPI",
"TractAIAN", "TractOMultir",
"TractHispanic", "TractHUNV",
"Urban","TractSNAP",
"POP2010", "OHU2010",
"PovertyRate", "MedianFamilyIncome")
# Split the data into training and test sets
set.seed(111)
sample <- sample.int(nrow(data), floor(0.5*nrow(data)), replace = F)
logreg_train <- data[sample,cols]
logreg_test <- data[-sample, cols]
# Use glm to make a logistic regression model
logreg<-glm(LILATracts_1And10~., data=logreg_train, family="binomial")
summary(logreg)
# Delta G for full model
1 - pchisq(logreg$null.deviance-logreg$deviance,12)
# The predictors TractWhite and OHU2010 did not have
# significance according to Wald test. Running a Likelihood
# Ratio test to see if that subset can be removed
# Subset data
reduced_cols <- c("LILATracts_1And10", "TractLOWI",
"TractKids", "TractSeniors",
"TractBlack","TractAsian",
"TractNHOPI","TractAIAN",
"TractOMultir","TractHispanic",
"TractHUNV","Urban",
"TractSNAP", "POP2010",
"PovertyRate","MedianFamilyIncome")
reduced_data <- logreg_train[,reduced_cols]
# Subset model
reduced <-glm(LILATracts_1And10~., data=reduced_data, family="binomial")
# Likelihood Ratio test
# H0: ^B,TractWhite = ^B, OHU2010 = 0
# H1: At least one of the predictors TractWhite, OHU2010 is not 0
1-pchisq(reduced$deviance-logreg$deviance,2)
# p-value = 0.980
# Fail to reject the null, we can drop OHU and TractWhite
# Renaming reduced to logreg
logreg <- reduced
summary(logreg)
# In the summary for the reduced model, POP2010 is
# now found to be insignificant from its Wald test
# statistic. Removing the POP2010 predictor from the model
reduced_data <- reduced_data[,-14]
logreg <-glm(LILATracts_1And10~., data=reduced_data, family="binomial")
summary(logreg)
# All predictors now have significant Wald Test statistics.
# Checking Delta G for newest iteration of model
1 - pchisq(logreg$null.deviance-logreg$deviance,12)
#DG = 0
# Create an ROC curve for our Logistic Regression
library(ROCR)
# Predictions for Low Income, Low Access on the test set
# based on fitted model
preds <- predict(logreg,newdata=logreg_test, type="response")
preds
preds[preds >= 0.5 == 1]
preds[preds >= 0.5 = 1]
for (pred in preds){
if (pred >= 0.5){
pred = 1
} else {
pred = 0
}
}
preds
# AUC of .84 indicates a model better than random guessing
preds[1]
# AUC of .84 indicates a model better than random guessing
preds >=0.5
preds >=0.5 = 1
preds < 0.5 = 0
# AUC of .84 indicates a model better than random guessing
(preds >= 0.5) = 1
View(logreg_test)
